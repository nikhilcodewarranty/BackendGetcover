{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Get Cover Api Documentation",
      "description": "Yet Another Node.js Blogg Application API",
      "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
      }
    },
    "host": "localhost:3000",
    "basePath": "/api/v1",
    "tags": [
      {
        "name": "Users",
        "description": "API for users in the system"
      }
    ],
    "schemes": [
      "http"
    ],
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "paths": {
      "/users": {
        "post": {
          "tags": [
            "Users"
          ],
          "description": "Create new user in system",
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User that we want to create",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "200": {
              "description": "New user is created",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get all users in system",
          "responses": {
            "200": {
              "description": "OK",
              "schema": {
                "$ref": "#/definitions/Users"
              }
            }
          }
        }
      },
      "/users/{userId}": {
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "description": "ID of user that we want to find",
            "type": "string"
          }
        ],
        "get": {
          "tags": [
            "Users"
          ],
          "summary": "Get user with given ID",
          "responses": {
            "200": {
              "description": "User is found",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "delete": {
          "summary": "Delete user with given ID",
          "tags": [
            "Users"
          ],
          "responses": {
            "200": {
              "description": "User is deleted",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        },
        "put": {
          "summary": "Update user with give ID",
          "tags": [
            "Users"
          ],
          "parameters": [
            {
              "name": "user",
              "in": "body",
              "description": "User with new values of properties",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User is updated",
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "Claims": {
        "required": [
          "contractId",
          "_id"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "contractId": {
            "type": "mongoose.Schema.Types.ObjectId"
          },
          "claimStatus": {
            "type": "string"
          },
          "bdAdh": {
            "type": "string"
          },
          "diagnosis": {
            "type": "string"
          },
          "receiptImage": {
            "type": "string"
          },
          "shippingCarrier": {
            "type": "string"
          },
          "shippingLabel": {
            "type": "string"
          },
          "claimDate": {
            "type": "Date"
          },  
        "claimType": {
            "type": "String"
          },
          "servicePaymentStatus": {
            "type": "String"
          },
          "shippingAmount": {
            "type": "Number"
          },
          "totalAmount": {
            "type": "Number"
          }
        }
      },
      "ClaimPart": {
        "required": [
          "contractId",
          "_id"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "claimId": {
            "type": "mongoose.Schema.Types.ObjectId"
          },
          "serviceproId": {
            "type": "mongoose.Schema.Types.ObjectId"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "serial": {
            "type": "string"
          },
          "manufacture": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "price": {
            "type": "Number"
          }
        }
      },
      "ClaimStatus": {
        "required": [
          "contractId",
          "_id"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "claimId": {
            "type": "mongoose.Schema.Types.ObjectId"
          },
          "status": {
            "type": "string"
          },
          "updateDate": {
            "type": "Date"
          }
        }
      },
      "Dealer": {
        "required": [
          "_id"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "PriceBook": {
        "required": [
          "_id"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "term": {
            "type": "string"
          },
          "frontingFee": {
            "type": "string"
          },
          "reinsurenceFee": {
            "type": "string"
          },
          "adminFee": {
            "type": "string"
          },
          "category": {
            "type": "mongoose.Schema.Types.ObjectId"
          }
        }
      },
      "serviceProvider": {
        "required": [
          "_id"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "name": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "zip": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        }
      },
      "Users": {
        "required": [
          "_id"
        ],
        "properties": {
          "_id": {
            "type": "string",
            "uniqueItems": true
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "accountId": {
            "type": "mongoose.Schema.Types.ObjectId"
          },
          "phoneNumber": {
            "type": "string"
          },
          "roleId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      }
    }
  }